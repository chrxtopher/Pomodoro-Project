{"ast":null,"code":"var _jsxFileName = \"/Users/christopher/Thinkful/chall/Project_Pomodoro_Timer_Qualified_1/src/TimerDisplay.js\";\nimport React from \"react\";\n\nfunction TimerDisplay({\n  session,\n  minutesToDuration,\n  secondsToDuration,\n  focusDuration,\n  breakDuration\n}) {\n  if (session) {\n    return (\n      /*#__PURE__*/\n\n      /* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */\n      React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        \"data-testid\": \"session-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }\n      }, session === null || session === void 0 ? void 0 : session.label, \" for\", \" \", (session === null || session === void 0 ? void 0 : session.label) === \"Focusing\" ? minutesToDuration(focusDuration) : minutesToDuration(breakDuration)), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"lead\",\n        \"data-testid\": \"session-sub-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, secondsToDuration(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"progress\",\n        style: {\n          height: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"progress-bar\",\n        role: \"progressbar\",\n        \"aria-valuemin\": \"0\",\n        \"aria-valuemax\": \"100\",\n        \"aria-valuenow\": \"0\" // TODO: Increase aria-valuenow as elapsed time increases\n        ,\n        style: {\n          width: \"0%\"\n        } // TODO: Increase width % as elapsed time increases\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }\n      })))))\n    );\n  }\n}\n\nexport default TimerDisplay;","map":{"version":3,"sources":["/Users/christopher/Thinkful/chall/Project_Pomodoro_Timer_Qualified_1/src/TimerDisplay.js"],"names":["React","TimerDisplay","session","minutesToDuration","secondsToDuration","focusDuration","breakDuration","label","timeRemaining","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,YAAT,CAAsB;AACpBC,EAAAA,OADoB;AAEpBC,EAAAA,iBAFoB;AAGpBC,EAAAA,iBAHoB;AAIpBC,EAAAA,aAJoB;AAKpBC,EAAAA;AALoB,CAAtB,EAMG;AACD,MAAIJ,OAAJ,EAAa;AACX;AAAA;;AACE;AACA,6DACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,uBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,OADH,aACGA,OADH,uBACGA,OAAO,CAAEK,KADZ,UACuB,GADvB,EAEG,CAAAL,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEK,KAAT,MAAmB,UAAnB,GACGJ,iBAAiB,CAACE,aAAD,CADpB,GAEGF,iBAAiB,CAACG,aAAD,CAJvB,CADF,eAOE;AAAG,QAAA,SAAS,EAAC,MAAb;AAAoB,uBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,iBAAiB,CAACF,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEM,aAAV,CADpB,eAPF,CADF,CADF,eAcE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAC,aAFP;AAGE,yBAAc,GAHhB;AAIE,yBAAc,KAJhB;AAKE,yBAAc,GALhB,CAKoB;AALpB;AAME,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SANT,CAM0B;AAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,CAdF;AAFF;AAgCD;AACF;;AAED,eAAeT,YAAf","sourcesContent":["import React from \"react\";\n\nfunction TimerDisplay({\n  session,\n  minutesToDuration,\n  secondsToDuration,\n  focusDuration,\n  breakDuration,\n}) {\n  if (session) {\n    return (\n      /* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */\n      <>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <h2 data-testid=\"session-title\">\n              {session?.label} for{\" \"}\n              {session?.label === \"Focusing\"\n                ? minutesToDuration(focusDuration)\n                : minutesToDuration(breakDuration)}\n            </h2>\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {secondsToDuration(session?.timeRemaining)} remaining\n            </p>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow=\"0\" // TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: \"0%\" }} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default TimerDisplay;\n"]},"metadata":{},"sourceType":"module"}